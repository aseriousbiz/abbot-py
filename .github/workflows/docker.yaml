name: Publish 'aseriousbiz/abbot/abbot-py/runner-py' image

# The rest of this is basically generic and copy-pastable.
# The 'env' vars above control which docker file is built and what name the image is published under.

on:
  # Run on every commit to 'main' or 'lab/**'
  push:
    branches:
      - main
      - lab/**

  # And on every PR to 'main'
  pull_request:
    branches:
      - main

  # Make sure images are built at least once a week.
  schedule:
    # https://crontab.guru/#22_16_*_*_1
    # "At 16:22 UTC (09:22 PT) every Monday"
    # GitHub recommends avoiding the top of the hour because it's commonly used by other actions.
    # Scheduled actions may be skipped if there's high load.
    - cron: '22 16 * * 1'

  # Allow manually scheduling the build too.
  workflow_dispatch:

env:
  IMAGE_BASE_NAME: abbotimages.azurecr.io/aseriousbiz/abbot-py

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0

      - name: Run Security Update Audit
        run: |
          script/audit

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{ "clientId": "${{ secrets.DEPLOYBOT_AZURE_AD_CLIENT_ID }}", "clientSecret": "${{ secrets.DEPLOYBOT_AZURE_AD_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}" }'

      - name: Login to abbotimages.azurecr.io
        run: |
          az acr login -n abbotimages -g abbot-global

      - name: Set environment variables
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            # For a PR, use the head branch.
            BRANCH_TAG="$(echo "${{ github.head_ref }}" | sed 's@/@.@g')"
            IMAGE_VERSION="${BRANCH_TAG}"
          else
            # For push or schedule events, we run on main
            IMAGE_VERSION="main"
            if [ "${{ github.ref_name }}" != "main" ]; then
              # For a non-main branch, use the ref_name to generate a tag
              BRANCH_TAG="$(echo "${{ github.ref_name }}" | sed 's@/@.@g')"
              IMAGE_VERSION="${BRANCH_TAG}"
            fi
          fi

          # Save the IMAGE_VERSION env var to the GITHUB_ENV file so future steps can use it.
          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
          echo "COMMIT_LABEL=commit-${{ github.sha }}" >> $GITHUB_ENV
          echo "COMMIT_TAG=${IMAGE_TAG_BASE}:commit-${{ github.sha }}" >> $GITHUB_ENV

      - name: Docker Build
        run: |
          docker build \
            -t $IMAGE_BASE_NAME/runner-py-functions:$IMAGE_VERSION \
            --build-arg "BUILD_BRANCH=${{ github.ref_name }}" \
            --build-arg "BUILD_SHA=${{ github.sha }}" \
            --label "github.sha=${{ github.sha }}" \
            --label "github.ref_name=${{ github.ref_name }}" \
            --label "github.actor=${{ github.actor }}" \
            --label "github.run_id=${{ github.run_id }}" \
            -f functions.Dockerfile \
            .
            docker tag $IMAGE_BASE_NAME/runner-py-functions:$IMAGE_VERSION abbotimages.azurecr.io/aseriousbiz/abbot-py/runner-py-functions:$COMMIT_LABEL

      - name: Docker Build (Standalone)
        run: |
          docker build \
            -t $IMAGE_BASE_NAME/runner-py:$IMAGE_VERSION \
            --build-arg "BUILD_BRANCH=${{ github.ref_name }}" \
            --build-arg "BUILD_SHA=${{ github.sha }}" \
            --label "github.sha=${{ github.sha }}" \
            --label "github.ref_name=${{ github.ref_name }}" \
            --label "github.actor=${{ github.actor }}" \
            --label "github.run_id=${{ github.run_id }}" \
            -f Dockerfile \
            .
            docker tag $IMAGE_BASE_NAME/runner-py:$IMAGE_VERSION abbotimages.azurecr.io/aseriousbiz/abbot-py/runner-py:$COMMIT_LABEL

      # Push the container to ACR
      # We _do_ run this even on Pull Requests!
      # Storage ain't a concern for us right now, so let's build the containers and push them
      # That makes moving to branch-deployment easier.
      - name: Push the docker image
        run: |
          docker push $IMAGE_BASE_NAME/runner-py-functions:$IMAGE_VERSION
          docker push $IMAGE_BASE_NAME/runner-py:$IMAGE_VERSION
          docker push $IMAGE_BASE_NAME/runner-py-functions:$COMMIT_LABEL
          docker push $IMAGE_BASE_NAME/runner-py:$COMMIT_LABEL

      - name: Get the image manifest
        run: |
          docker image inspect "$IMAGE_BASE_NAME/runner-py-functions:$IMAGE_VERSION" > runner-py-functions.manifest.json
          docker image inspect "$IMAGE_BASE_NAME/runner-py:$IMAGE_VERSION" > runner-py.manifest.json
      
      - name: Publish image manifest artifact
        uses: actions/upload-artifact@v3
        with:
          name: runner-py-functions.manifest.json
          path: runner-py-functions.manifest.json
      
      - name: Publish image manifest artifact
        uses: actions/upload-artifact@v3
        with:
          name: runner-py.manifest.json
          path: runner-py.manifest.json
          
      - name: Trigger deployment workflow (Main only)
        if: github.event_name == 'push' && github.ref_name == 'main'
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh workflow run deploy.yaml -f environment=production -f label=$COMMIT_LABEL