name: Deploy Python Skill Runner
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: environment
      label:
        description: "Image label"
        default: "latest"
        required: true
        type: string

env:
  APP_DESCRIPTION: "Python Skill Runner"
  IMAGE_BASE_NAME: "abbotimages.azurecr.io/aseriousbiz/abbot-py/runner-py-functions"

# Only allow one active deployment per environment
concurrency:
  group: ${{ github.workflow }}-${{ inputs.environment }}
  cancel-in-progress: false

jobs:
  deploy-runner-py:
    runs-on: ubuntu-latest
    environment:
      name: "${{ inputs.environment }}"
      url: "${{ vars.ABBOT_RUNNER_PY_URL }}"
    steps:
      - uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: '{ "clientId": "${{ secrets.DEPLOYBOT_AZURE_AD_CLIENT_ID }}", "clientSecret": "${{ secrets.DEPLOYBOT_AZURE_AD_CLIENT_SECRET }}", "subscriptionId": "${{ secrets.AZURE_SUBSCRIPTION_ID }}", "tenantId": "${{ secrets.AZURE_TENANT_ID }}" }'

      - name: Login to abbotimages.azurecr.io
        run: |
          az acr login -n abbotimages -g abbot-global

      - name: Generate a unique Deployment ID
        run: |
          echo "DEPLOYMENT_ID=$(uuidgen)" >> "$GITHUB_ENV"

      - name: Tag the latest-deployed image on ACR
        run: |
          docker pull "${{ env.IMAGE_BASE_NAME }}:${{ inputs.label }}"
          docker tag "${{ env.IMAGE_BASE_NAME }}:${{ inputs.label }}" "${{ env.IMAGE_BASE_NAME }}:deployed-${{ inputs.environment }}"
          docker push "${{ env.IMAGE_BASE_NAME }}:deployed-${{ inputs.environment }}"

      - name: Deploy to Runner
        uses: azure/webapps-deploy@v2
        with:
          app-name: "${{ vars.ABBOT_RUNNER_PY_APP_NAME }}"
          images: "${{ env.IMAGE_BASE_NAME }}:deployed-${{ inputs.environment }}"